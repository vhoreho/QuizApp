export enum UserRole {
  ADMIN = 'administrator',
  TEACHER = 'teacher',
  STUDENT = 'student'
}

export interface User {
  id: number;
  username: string;
  role: UserRole;
  firstName?: string;
  lastName?: string;
}

export enum QuestionType {
  SINGLE_CHOICE = 'SINGLE_CHOICE',
  MULTIPLE_CHOICE = 'MULTIPLE_CHOICE',
  MATCHING = 'MATCHING',
  TRUE_FALSE = 'TRUE_FALSE'
}

export interface Question {
  id: number;
  text: string;
  type: QuestionType;
  options: string[];
  correctAnswers?: string[];
  matchingPairs?: { [key: string]: string };
  quizId: number;
  points: number;
  order: number;
}

export enum QuizCategory {
  PROGRAMMING = "programming",
  MATHEMATICS = "mathematics",
  SCIENCE = "science",
  LANGUAGES = "languages",
  HISTORY = "history",
  LITERATURE = "literature",
  OTHER = "other"
}

export interface QuizCategoryInfo {
  id: QuizCategory;
  name: string;
  description: string;
  icon: string;
}

export const QUIZ_CATEGORIES: QuizCategoryInfo[] = [
  {
    id: QuizCategory.PROGRAMMING,
    name: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
    description: "–¢–µ—Å—Ç—ã –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —è–∑—ã–∫–∞–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º",
    icon: "üíª"
  },
  {
    id: QuizCategory.MATHEMATICS,
    name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    description: "–¢–µ—Å—Ç—ã –ø–æ –∞–ª–≥–µ–±—Ä–µ, –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∏ –¥—Ä—É–≥–∏–º —Ä–∞–∑–¥–µ–ª–∞–º –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏",
    icon: "üìê"
  },
  {
    id: QuizCategory.SCIENCE,
    name: "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏",
    description: "–¢–µ—Å—Ç—ã –ø–æ —Ñ–∏–∑–∏–∫–µ, —Ö–∏–º–∏–∏, –±–∏–æ–ª–æ–≥–∏–∏ –∏ –¥—Ä—É–≥–∏–º –Ω–∞—É–∫–∞–º",
    icon: "üî¨"
  },
  {
    id: QuizCategory.LANGUAGES,
    name: "–Ø–∑—ã–∫–∏",
    description: "–¢–µ—Å—Ç—ã –ø–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º —è–∑—ã–∫–∞–º –∏ –ª–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–µ",
    icon: "üåç"
  },
  {
    id: QuizCategory.HISTORY,
    name: "–ò—Å—Ç–æ—Ä–∏—è",
    description: "–¢–µ—Å—Ç—ã –ø–æ –≤—Å–µ–º–∏—Ä–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º —Å–æ–±—ã—Ç–∏—è–º",
    icon: "üìú"
  },
  {
    id: QuizCategory.LITERATURE,
    name: "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
    description: "–¢–µ—Å—Ç—ã –ø–æ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ, –ø–∏—Å–∞—Ç–µ–ª—è–º –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è–º",
    icon: "üìö"
  },
  {
    id: QuizCategory.OTHER,
    name: "–î—Ä—É–≥–æ–µ",
    description: "–†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Å—Ç—ã, –Ω–µ –≤–æ—à–µ–¥—à–∏–µ –≤ –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    icon: "üìå"
  }
];

export interface Quiz {
  id: number;
  title: string;
  description: string;
  category: QuizCategory;
  timeLimit?: number;
  passingScore?: number;
  isPublished: boolean;
  createdAt: string;
  updatedAt: string;
  createdBy: number;
  questions: Question[];
}

export interface Answer {
  id?: number;
  questionId: number;
  questionType: QuestionType;
  selectedAnswer?: string;
  selectedAnswers?: string[];
  matchingPairs?: { [key: string]: string };
  textAnswer?: string;
  isCorrect?: boolean;
  partialScore?: number;
  question?: Question;
}

export interface QuizResult {
  quizId: number;
  score: number;
  totalQuestions: number;
  correctAnswers: number;
  totalPoints?: number;
  maxPossiblePoints?: number;
  partialPoints?: number;
}

export interface Result {
  id: number;
  quizId: number;
  userId: number;
  score: number;
  correctAnswers: number;
  totalQuestions: number;
  totalPoints: number;
  maxPossiblePoints: number;
  createdAt: string;
  isPractice?: boolean;
  user?: User;
  quiz?: Quiz;
}

export interface Group {
  id: number;
  name: string;
  description: string;
  createdById: number;
  studentIds: number[];
} 